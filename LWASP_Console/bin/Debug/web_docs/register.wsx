<%include methods.wsx%>
<@@@ 
using System.Net;
public static class StringExtender
{
	public static bool IsValidEmail(this string email)
	{
	    LWASP.Debug(email);
		try {
			var addr = new System.Net.Mail.MailAddress(email);
			return addr.Address == email;
		}
		catch {
			return false;
		}
	}
}
@>
<@
OleDbConnection conn = null;
try
{
	conn = new OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0;Data Source=cdn_docs\\WDB.accdb");
	conn.Open();
	if (ReadAction("SELECT Username FROM Users WHERE Username='" + Escape(_POST["username"]) + "';").Count > 0)
	{
		echo("Error: The username typed already exists");
		return;
	}
	if (_POST["username"].Length < 6)
	{
		echo("Error: Username must contain at least 6 characters.");
		return;
	}
	if (_POST["username"].Contains(" "))
	{
		echo("Error: Username must not contain any whitespace.");
		return;
	}
	if (_POST["username"].Length > 16)
	{
		echo("Error: Username must contain at most 16 characters.");
		return;
	}
	if (_POST["password"].Length < 6)
	{
		echo("Error: Password must contain at least 6 characters.");
		return;
	}
	if (_POST["password"].Length > 30)
	{
		echo("Error: Password must contain at most 30 characters.");
		return;
	}
	if (_POST["password"].ToLower() == _POST["password"])
	{
		echo("Error: Username must contain at least one uppercase character.");
		return;
	}
	if (_POST["password"].ToUpper() == _POST["password"])
	{
		echo("Error: Username must contain at least one lowercase character.");
		return;
	} 
	if (!_POST["password"].Any(c => char.IsDigit(c)))
	{
		echo("Error: Password must contain at least one digit.");
		return;
	}
	if (!_POST["email"].IsValidEmail())
	{
		echo("Error: Email is not in the correct format");
		return;
	}
	if (_POST["fullname"].Length < 1)
	{
		echo("Error: You must specify your full name");
		return;
	}
	if (_POST["about"].Length < 1)
	{
		echo("Error: You must specify your 'about' section");
		return;
	}
	int time = (int)(DateTime.UtcNow - new DateTime(2000, 1, 1)).TotalSeconds;
	string ses = GetRandomString();
	if (!WriteAction(String.Format("INSERT INTO Users (Username, UserPassword, Email, RealName, About, LastSeen, SignupDate, XP, SessionCode) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}', {5}, {6}, 0, '{7}');",
		Escape(_POST["username"]), Escape(_POST["password"]), Escape(_POST["email"]), Escape(_POST["fullname"]), Escape(_POST["about"]), time, time, ses)))
	{
		echo("Error: Database error.");
		return;
	}
	Cookie userCookie = new Cookie("username", _POST["username"], "/");
	userCookie.Expires = DateTime.Now.AddDays(30);
	Cookie sessionCookie = new Cookie("session", ses, "/");
	sessionCookie.Expires = DateTime.Now.AddDays(30);
	_CONNECTION.responseCookies.Add(userCookie);
	_CONNECTION.responseCookies.Add(sessionCookie);
	echo("Ok");
}
catch (Exception exx){
	echo("Error: " + exx.Message + "." + exx.StackTrace + "<br/>" + "SELECT Username FROM Users WHERE Username='" + Escape(_POST["username"]) + "';");
}
finally
{
	if (conn != null) conn.Close();
}
@>